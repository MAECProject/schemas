<?xml version="1.0" encoding="UTF-8"?>
<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified"
	targetNamespace="http://maec.mitre.org/XMLSchema/maec-core-1"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:maecVocabs="http://maec.mitre.org/default_vocabularies-1"
	xmlns:maecCore="http://maec.mitre.org/XMLSchema/maec-core-1"
	xmlns:cyboxVocabs="http://cybox.mitre.org/default_vocabularies-2"
	xmlns:cybox="http://cybox.mitre.org/cybox-2" xmlns:cyboxCommon="http://cybox.mitre.org/common-2"
	xmlns:ProcessObj="http://cybox.mitre.org/objects#ProcessObject-2"
	xmlns:CodeObj="http://cybox.mitre.org/objects#CodeObject-2" version="1.0">
	<xs:import namespace="http://cybox.mitre.org/cybox-2"
		schemaLocation="http://cybox.mitre.org/XMLSchema/core/2.1/cybox_core.xsd"/>
	<xs:import namespace="http://cybox.mitre.org/common-2"
		schemaLocation="http://cybox.mitre.org/XMLSchema/common/2.1/cybox_common.xsd"/>
	<xs:import namespace="http://cybox.mitre.org/objects#CodeObject-2"
		schemaLocation="http://cybox.mitre.org/XMLSchema/objects/Code/2.1/Code_Object.xsd"/>
	<xs:annotation>
		<xs:documentation>The following is a description of the elements, types, and attributes that compose Malware Attribute Enumeration and Characterization (MAEC) Bundle schema.</xs:documentation>
		<xs:documentation>The MAEC Bundle Schema is maintained by The Mitre Corporation. For more information, including how to get involved in the project, please visit the MAEC website at http://maec.mitre.org.</xs:documentation>
		<xs:documentation>This schema imports the CyBOX schema and object schemas. More info on CybOX can be found at http://cybox.mitre.org.</xs:documentation>
		<xs:appinfo>
			<schema>MAEC Core Schema</schema>
			<version>5.0</version>
			<date>5/5/2016</date>
			<terms_of_use>Copyright (c) 2012-2016, The MITRE Corporation. All rights reserved. The contents of this file are subject to the terms of the MAEC License located at http://maec.mitre.org/about/termsofuse.html. See the MAEC License for the specific language governing permissions and limitations for use of this schema. When distributing copies of the MAEC Schema, this license header must be included.</terms_of_use>
		</xs:appinfo>
	</xs:annotation>
	<xs:import namespace="http://cybox.mitre.org/objects#ProcessObject-2"
		schemaLocation="http://cybox.mitre.org/XMLSchema/objects/Process/2.1/Process_Object.xsd"/>
	<xs:import namespace="http://cybox.mitre.org/default_vocabularies-2"
		schemaLocation="http://cybox.mitre.org/XMLSchema/default_vocabularies/2.1/cybox_default_vocabularies.xsd"/>
	<xs:import namespace="http://maec.mitre.org/default_vocabularies-1"
		schemaLocation="http://maec.mitre.org/language/version4.1/maec_default_vocabularies.xsd"/>
	<xs:complexType name="MalwareActionType">
		<xs:annotation>
			<xs:documentation>The MalwareActionType is one of the foundational MAEC types, and serves as a method for the characterization of actions found or observed in malware. Actions can be thought of as system state changes and similar operations that represent the fundamental low-level operation of malware. Some examples include the creation of a file, deletion of a registry key, and the sending of some  data on a socket.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="Name" type="cyboxCommon:ControlledVocabularyStringType">
				<xs:annotation>
					<xs:documentation>The name field captures the name of the Malware Action. The default vocabulary for this field is the MalwareActionVocabulary from the MAEC Default Vocabularies schema.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Description" type="cyboxCommon:StructuredTextType">
				<xs:annotation>
					<xs:documentation>The Description field contains a textual description of the Malware Action.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="Associated_Object_Reference"
				type="maecCore:AssociatedObjectReferenceType">
				<xs:annotation>
					<xs:documentation>The Associated_Object_Reference captures a reference to a CybOX Object associated with the Malware Action, including those used as input into the Malware Action, resulting as output from the Malware Action, and resulting as a side effect from the Malware Action.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Implementation" type="maecCore:ActionImplementationType">
				<xs:annotation>
					<xs:documentation>The Implementation field is optional and serves to capture attributes that are relevant to how the Malware Action is implemented, such as the specific API call that was used.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="xs:QName" use="required">
			<xs:annotation>
				<xs:documentation>The required id field specifies a unique id for this Malware Action.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="timestamp" type="xs:dateTime" use="optional">
			<xs:annotation>
				<xs:documentation>The timestamp field represents the local or relative time at which the action occurred or was observed. In order to avoid ambiguity, it is strongly suggest that all timestamps in this field include a specification of the timezone if it is known, via the timestamp_precision field.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="timestamp_precision" type="cyboxCommon:DateTimePrecisionEnum">
			<xs:annotation>
				<xs:documentation>Represents the precision of the associated timestamp value. If omitted, the default is "second", meaning the timestamp is precise to the full field value. Digits in the timestamp that are required by the xs:dateTime datatype but are beyond the specified precision should be zeroed out.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="action_status" type="cybox:ActionStatusTypeEnum">
			<xs:annotation>
				<xs:documentation>The action_status field captures the status of the Malware Action, with respect to the success of its execution.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="count" type="xs:int">
			<xs:annotation>
				<xs:documentation>The count field captures how many times the Malware Action was observed, for cases where the same action is seen multiple times. In such cases, the timestamp field should be used to capture the first time the action was observed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="BehaviorType">
		<xs:annotation>
			<xs:documentation>The BehaviorType is one of the foundational MAEC types, and serves as a method for the characterization of malicious behaviors found or observed in malware. Behaviors can be thought of as representing the purpose behind groups of MAEC Actions, and are therefore representative of distinct portions of higher-level malware functionality. Thus, while a malware instance may perform some multitude of Actions, it is likely that these Actions represent only a few distinct behaviors. Some examples include vulnerability exploitation, email address harvesting, the disabling of a security service, etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element form="qualified" name="Name"
				type="cyboxCommon:ControlledVocabularyStringType">
				<xs:annotation>
					<xs:documentation>The required Name field captures the name of the Behavior. The default vocabulary for this field is the BehaviorVocab from the MAEC Default Vocabularies schema.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Description" type="cyboxCommon:StructuredTextType">
				<xs:annotation>
					<xs:documentation>The Description field contains a basic textual description of the Behavior.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="Attribute"
				type="maecCore:AttributeType">
				<xs:annotation>
					<xs:documentation>The Attribute field permits the capture of a single attribute of the Behavior, as a key/value pair. More than one attribute can be specified via multiple occurrences of this field.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="Action_Reference"
				type="maecCore:BehavioralActionReferenceType">
				<xs:annotation>
					<xs:documentation>The Action_Reference field specifies a reference to a single Action that serves as the underlying implementation of the Behavior. More than one such Action can be referenced via multiple occurrences of this field.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" use="required" type="xs:QName">
			<xs:annotation>
				<xs:documentation>The required id field specifies a unique ID for this Behavior.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="status" type="cybox:ActionStatusTypeEnum">
			<xs:annotation>
				<xs:documentation>The status field specifies the execution status of the Behavior, i.e. whether it was successful or not.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="reference" type="xs:anyURI">
			<xs:annotation>
				<xs:documentation>The reference field specifies the URL of the corresponding entry in the MAEC Semantic MediaWiki for the Behavior.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="APICallType">
		<xs:annotation>
			<xs:documentation>The APICallType provides a method for the  characterization of API calls, including functions and their parameters.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Address" type="xs:hexBinary" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Address field contains the address of the API call in the binary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Return_Value" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Return_Value field contains the return value of the API call.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Parameters" type="maecCore:ParameterListType">
				<xs:annotation>
					<xs:documentation>The Parameter field captures any name/value pairs of the parameters passed into the API call.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="function_name" type="xs:string">
			<xs:annotation>
				<xs:documentation>The function_name field contains the exact name of the API function called, e.g. CreateFileEx.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="normalized_function_name" type="xs:string">
			<xs:annotation>
				<xs:documentation>The normalized_function_name field contains the normalized name of the API function called, e.g. CreateFile.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ActionImplementationType">
		<xs:annotation>
			<xs:documentation>The ActionImplementationType serves as a method for the characterization of Action Implementations. Currently supported are implementations achieved through API function calls and abstractly defined code.
		</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Compatible_Platforms" type="maecCore:PlatformListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Compatible_Platforms field specifies the specific platform(s) that the Action is compatible with, or in other words, capable of being successfully executed on.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="API_Call" maxOccurs="1" minOccurs="0" type="maecCore:APICallType">
					<xs:annotation>
						<xs:documentation>The API_Call field allows for the characterization of a system-level API call that was used to implement the action. Software must make use of such calls to talk to 			hardware and perform system-specific functions.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Code" maxOccurs="unbounded" type="maecCore:ObjectReferenceType"
					minOccurs="0">
					<xs:annotation>
						<xs:documentation>The Code field references a CybOX Object, which MUST be a Code Object that was that was used to implement the action.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="id" use="optional" type="xs:QName">
			<xs:annotation>
				<xs:documentation>The id field specifies a unique ID for this Action Implementation.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type" use="required" type="maecCore:ActionImplementationTypeEnum">
			<xs:annotation>
				<xs:documentation>The required type field refers to the type of Action Implementation being characterized in this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ParameterType">
		<xs:annotation>
			<xs:documentation>The ParameterType characterizes function parameters.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="ordinal_position" type="xs:positiveInteger">
			<xs:annotation>
				<xs:documentation>This field refers to the ordinal position of the parameter with respect to the function where it is used.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="name" type="xs:string">
			<xs:annotation>
				<xs:documentation>The name field specifies the name of the parameter.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="value" type="xs:string">
			<xs:annotation>
				<xs:documentation>The value field specifies the actual value of the parameter.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ParameterListType">
		<xs:annotation>
			<xs:documentation>The ParametersType captures a list of function parameters.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="Parameter" type="maecCore:ParameterType">
				<xs:annotation>
					<xs:documentation>The Parameter field specifies a single function parameter.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AssociatedCodeType">
		<xs:annotation>
			<xs:documentation>The AssociatedCodeType serves as generic way of specifying any code snippets associated with a MAEC entity, such as a Behavior.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="Code_Snippet"
				type="maecCore:ObjectReferenceType">
				<xs:annotation>
					<xs:documentation>The Code_Snippet field references a CybOX Object, which MUST be a Code Object that captures a single snippet of code.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PlatformListType">
		<xs:annotation>
			<xs:documentation>The PlatformListType captures a list of software or hardware platforms.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="Platform"
				type="cyboxCommon:PlatformSpecificationType">
				<xs:annotation>
					<xs:documentation>The Platform field specifies a single Platform in the list via a common platform enumeration ID. It uses the PlatformSpecificationType type from the CybOX Common schema v2.0.1.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BehaviorListType">
		<xs:annotation>
			<xs:documentation>The BehaviorListType captures a list of Behaviors.</xs:documentation>
		</xs:annotation>
		<xs:sequence maxOccurs="1">
			<xs:element name="Behavior" type="maecCore:BehaviorType" maxOccurs="unbounded"
				form="qualified" minOccurs="1">
				<xs:annotation>
					<xs:documentation>The Behavior field specifies a single Behavior in the list.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ActionListType">
		<xs:annotation>
			<xs:documentation>The ActionListType captures a list of Actions.</xs:documentation>
		</xs:annotation>
		<xs:sequence maxOccurs="1">
			<xs:element name="Action" type="maecCore:MalwareActionType" maxOccurs="unbounded"
				minOccurs="1">
				<xs:annotation>
					<xs:documentation>The Action field specifies a single Action in the list.</xs:documentation>
					<xs:documentation>The recommended syntax for Action IDs is a dash-delimited format that starts with the word maec, followed by a unique string, followed by the three letter code 'act', and ending with an integer. The regular expression validating these IDs is: maec-[A-Za-z0-9_\-\.]+-act-[1-9][0-9]*.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ObjectListType">
		<xs:annotation>
			<xs:documentation>The ObjectListType captures a list of CybOX Objects.</xs:documentation>
		</xs:annotation>
		<xs:sequence maxOccurs="1">
			<xs:element maxOccurs="unbounded" name="Object" type="cybox:ObjectType">
				<xs:annotation>
					<xs:documentation>The Object field specifies a single CybOX Object in the list. For use in MAEC, the id attribute at the top level of the Object must be utilized.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BehaviorReferenceType">
		<xs:annotation>
			<xs:documentation>The BehaviorReferenceType serves as a method for referencing Behaviors defined in the Package.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="behavior_idref" type="xs:QName" use="required">
			<xs:annotation>
				<xs:documentation>The behavior_idref field specifies the id of the Behavior being referenced; this Behavior must be present in the current Package.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ObjectReferenceType">
		<xs:annotation>
			<xs:documentation>The ObjectReferenceType serves as a method for linking to CybOX Objects defined in the Package.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="object_idref" type="xs:QName" use="required">
			<xs:annotation>
				<xs:documentation>The object_idref field specifies the id of the CybOX Object being referenced.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="BehavioralActionReferenceType">
		<xs:annotation>
			<xs:documentation>The BehavioralActionReferenceType defines an action reference that can be used as part of a Behavior.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="cybox:ActionReferenceType">
				<xs:attribute name="behavioral_ordering" type="xs:positiveInteger">
					<xs:annotation>
						<xs:documentation>The behavioral_ordering field defines the ordering of the Action with respect to the other Actions that make up the Behavior. For example, an Action with a behavioral_ordering of "1" would come before an Action with a behavioral_ordering of "2", etc.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BehaviorReferenceListType">
		<xs:annotation>
			<xs:documentation>The BehaviorReferenceListType captures a list of Behavior References.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="Behavior_Reference"
				type="maecCore:BehaviorReferenceType">
				<xs:annotation>
					<xs:documentation>The Behavior_Reference field specifies a reference to a single Behavior.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ActionReferenceListType">
		<xs:annotation>
			<xs:documentation>The ActionReferenceListType captures a list of Action References.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="Action_Reference"
				type="cybox:ActionReferenceType">
				<xs:annotation>
					<xs:documentation>The Action_Reference field specifies a reference to a single Action.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ObjectReferenceListType">
		<xs:annotation>
			<xs:documentation>The ObjectReferenceListType captures a list of references to CybOX Objects. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="Object_Reference"
				type="maecCore:ObjectReferenceType">
				<xs:annotation>
					<xs:documentation>The Object_Reference field specifies a reference to a single CybOX Object.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProcessTreeType">
		<xs:annotation>
			<xs:documentation>The ProcessTreeType captures the process tree for the malware instance, including the parent process and processes spawned by it, along with any Actions initiated by each.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Root_Process" type="maecCore:ProcessTreeNodeType">
				<xs:annotation>
					<xs:documentation>The Root_Process field captures the root process in the process tree.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProcessTreeNodeType">
		<xs:annotation>
			<xs:documentation>The ProcessTreeNodeType captures a single process, or node, in the process tree. It imports and extends the ProcessObjectType from the CybOX Process Object.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ProcessObj:ProcessObjectType">
				<xs:sequence>
					<xs:element minOccurs="0" name="Initiated_Actions"
						type="maecCore:ActionReferenceListType">
						<xs:annotation>
							<xs:documentation>The Initiated_Actions field captures, via references, the actions (found inside the top-level Actions element, or an Action Collection inside the top-level Collections element) initiated by the Process.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="Spawned_Process"
						type="maecCore:ProcessTreeNodeType">
						<xs:annotation>
							<xs:documentation>The Spawned_Process field captures a single child process spawned by this process.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="Injected_Process"
						type="maecCore:ProcessTreeNodeType">
						<xs:annotation>
							<xs:documentation>The Injected_Process field captures a single process that was injected by this process.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="id" type="xs:QName" use="required">
					<xs:annotation>
						<xs:documentation>The required id field specifies a unique ID for the Process Node.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="parent_action_idref" type="xs:QName">
					<xs:annotation>
						<xs:documentation>The parent_action_idref field specifies the id of the action that created or injected this process.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="ordinal_position" type="xs:positiveInteger">
					<xs:annotation>
						<xs:documentation>The ordinal_position field specifies the ordinal position of the process with respect to the other processes spawned or injected by the malware.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AVClassificationType">
		<xs:annotation>
			<xs:documentation>The AVClassificationType captures information on AV scanner classifications.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="cyboxCommon:ToolInformationType">
				<xs:sequence>
					<xs:element minOccurs="0" name="Engine_Version" type="xs:string">
						<xs:annotation>
							<xs:documentation>The Engine_Version field captures the version of the AV engine used by the AV scanner tool.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="Definition_Version" type="xs:string">
						<xs:annotation>
							<xs:documentation>The Definition_Version field captures the version of the AV definitions used by the AV scanner tool.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="Classification_Name" type="xs:string">
						<xs:annotation>
							<xs:documentation>The Classification_Name field captures the classification assigned to the malware instance object by the AV scanner tool.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="scan_date" type="xs:dateTime">
					<xs:annotation>
						<xs:documentation>The scan_date field specifies the date and time of the scan. This field can be used to capture how a scan changes over time.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="detected" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>The detected field specifies whether or not the AV tool specified in AVClassificationType has detected the malware instance that is characterized by the Malware Subject.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="ActionImplementationTypeEnum">
		<xs:annotation>
			<xs:documentation>The ActionImplementationTypeEnum represents an enumeration of action implementation types.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="api call">
				<xs:annotation>
					<xs:documentation>The api call value specifies that the action was implemented using some particular API call, details of which may be captured in the API_Call element.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="code">
				<xs:annotation>
					<xs:documentation>The Code value specifies that the action was implemented using some particular code snippet, details of which may be captured in the Code element</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="CapabilityType">
		<xs:annotation>
			<xs:documentation>The CapabilityType captures details of a Capability that may be implemented in the malware instance.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="cyboxCommon:ControlledVocabularyStringType">
				<xs:annotation>
					<xs:documentation>The required Name field captures the name of the Capability. The default vocabulary for this field is the CapabilityVocab from the MAEC Default Vocabularies schema. When used as part of a refined Capability, the default vocabulary is the RefinedCapabilityVocab.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Refined_Capability" type="maecCore:CapabilityType"
				maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The optional Refined_Capability field is a refinement of the Capability using the same structure.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Description" type="cyboxCommon:StructuredTextType">
				<xs:annotation>
					<xs:documentation>The Description field captures a basic textual description of the Capability.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="Attribute"
				type="maecCore:AttributeType">
				<xs:annotation>
					<xs:documentation>The Attribute field permits the capture of a single attribute of the Capability, as a name/value pair. More than one attribute can be specified via multiple occurrences of this field.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Behavior_Reference"
				type="maecCore:BehaviorReferenceType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The Behavior_Reference field captures a reference to a Behavior that serves as an implementation of the Capability. For Behaviors that serve as implementations of specific Strategic or Tactical Objectives, the Behavior_Reference field under the Strategic_Objective or Tactical_Objective fields should be used, respectively.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" use="required" type="xs:QName">
			<xs:annotation>
				<xs:documentation>The required id field specifies a unique ID for this MAEC Capability.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="reference" type="xs:anyURI" use="optional">
			<xs:annotation>
				<xs:documentation>The reference field specifies the URL of the corresponding entry in the MAEC Semantic MediaWiki for the Capability.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="CapabilityListType">
		<xs:annotation>
			<xs:documentation>The CapabilityListType captures a list of Capabilities.</xs:documentation>
		</xs:annotation>
		<xs:sequence maxOccurs="1">
			<xs:element maxOccurs="unbounded" minOccurs="1" name="Capability"
				type="maecCore:CapabilityType">
				<xs:annotation>
					<xs:documentation>The Capability field captures a single Capability in the list, and therefore represents a single Capability possessed by the malware instance.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CapabilityReferenceType">
		<xs:annotation>
			<xs:documentation>The CapabilityReferenceType serves as a method for referencing existing Capabilities contained in the MAEC document.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="capability_idref" type="xs:QName" use="required">
			<xs:annotation>
				<xs:documentation>The capability_idref field references the ID of a Capability contained inside the current MAEC document.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="CapabilityReferenceListType">
		<xs:annotation>
			<xs:documentation>The CapabilityReferenceListType captures a list of references to Capabilities defined in the MAEC document.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="Capability_Reference"
				type="maecCore:CapabilityReferenceType">
				<xs:annotation>
					<xs:documentation>The Capability_Reference field captures a reference to a single Capability defined in the MAEC document.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AttributeType">
		<xs:annotation>
			<xs:documentation>The AttributeType captures a single attribute of a Capability, Behavior, etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="Name" type="cyboxCommon:ControlledVocabularyStringType">
				<xs:annotation>
					<xs:documentation>The Name field specifies the name of the attribute being captured. The name can be either free form text or a standardized value from a vocabulary included in the MAEC Default Vocabularies schema. This field uses the ControlledVocabularyStringType from the imported CybOX Common schema. The default vocabulary for use with this field is the CommonAttributeVocab-1.0.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Value" type="cyboxCommon:ControlledVocabularyStringType">
				<xs:annotation>
					<xs:documentation>The Value field specifies the value of the attribute being captured. See the annotations for the enumerations in CommonAttributeEnum-1.0 for default vocabularies associated with these values.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProcessTreeListType">
		<xs:annotation>
			<xs:documentation>The ProcessTreeListType captures a list of Process Trees.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="Process_Tree" type="maecCore:ProcessTreeType">
				<xs:annotation>
					<xs:documentation>The Process_Tree field specifies a single process tree of execution, as recorded during an execution of the Malware Subject.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProcessTreeReferenceType">
		<xs:annotation>
			<xs:documentation>The ProcessTreeReferenceType captures a reference to an existing Process Tree defined in the MAEC document.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="process_tree_idref" type="xs:QName" use="required">
			<xs:annotation>
				<xs:documentation>The required processtree_idref field references an existing Process Tree defined in the MAEC document, via its ID.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ProcessTreeReferenceListType">
		<xs:annotation>
			<xs:documentation>The ProcessTreeReferenceListType captures a list of references to Process Trees defined in the MAEC document.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="Process_Tree_Reference"
				type="maecCore:ProcessTreeReferenceType">
				<xs:annotation>
					<xs:documentation>The Process_Tree_Reference field captures a reference to a single Process Tree defined in the MAEC document.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AssociatedObjectReferenceType">
		<xs:attribute name="object_idref" type="xs:QName" use="required">
			<xs:annotation>
				<xs:documentation>The object_idref field serves as a reference to an existing CybOX Object in the MAEC document, via its ID.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="association_type" type="maecVocabs:ActionObjectAssociationTypeEnum-1.0"
			use="required">
			<xs:annotation>
				<xs:documentation>The association_type field captures the type of association between the Action and the Object being referenced.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
</xs:schema>
