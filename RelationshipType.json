{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
        "RelationshipType": {
            "title":"Relationship",
            "type": "object",
            "definition": "The RelationshipType captures relationships between two entities in the MAEC document.",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": ["relationship"]
                },
                "id": {
                    "type": "string",
                    "description": "Specifies a unique identifier for the relationship."
                },
                "source_ref": {
                    "type": "string",
                    "description": "Specifies a reference to the ID of the entity in the MAEC document that corresponds to the source in the (source-&gt;target) relationship."
                },
                "target_ref": {
                    "type": "string",
                    "description": "Specifies a reference to the ID of the entity in the MAEC document that corresponds to the target in the (source-&gt;target) relationship."
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Specifies a timestamp that states when the relationship was created."
                },
                "relationship_type": {
                    "$ref": "string",
                    "description": "Specifies the type of relationship being expressed. This value SHOULD be an exact value listed in the relationships for the source and target top-level object, but MAY be any string. The value of this field MUST be in ASCII and is limited to characters a–z (lowercase ASCII), 0–9, and dash (-)."
                },
                "metadata": {
                    "type": "object",
                    "items": {THIS NEEDS TO BE AN OPEN ENDED DICT},
                    "description": "Specifies a dictionary of additional metadata around the relationship. Standard dictionary keys include the following: distance: used for capturing any distance related metadata. The corresponding value for this key MUST be an object of type RelationshipDistanceMetadataType. supporting_data_refs: references any entities in the MAEC document (e.g., Action or Object) that may support the Relationship. The corresponding value for this key MUST list of type identifier. Custom entries in the dictionary MAY also be included."
                }
            },
            "required": [
                "id",
                "source_ref",
                "target_ref",
                "type",
                "relationship_type"
            ]
        },
        "RelationshipDistanceType": {
	    "title":"RelationshipDistance",
            "type": "object",
            "description": "Captures information associated with a distance metric between the source and target in the relationship.",
            "properties": {
                "distance_score": {
                    "type": "number",
                    "description": "Captures the distance score between the source and target in the relationship. This is most commonly represented as a floating point value between zero and one (with a higher value representing a greater distance between the two), e.g., \"0.62\"."
                },
                "algorithm_name": {
                    "type": "string",
                    "description": "Captures the name of the algorithm used in calculating the distance score specified in the distance_score field."
                },
                "algorithm_version": {
                    "type": "string",
                    "description": "Captures the version of the algorithm used in calculating the distance score specified in the distance_score field."
                },
                "metadata":{
                    "type": "object",
                    "items": {THIS NEEDS TO BE AN OPEN ENDED DICT},
                    "description": "Specifies a dictionary of additional metadata around the distance score, as a set of key/value pairs. Dictionary keys and their corresponding values MUST be of type string. "

                }
            },
            "required": ["distance_score"]
        }
    }
}
