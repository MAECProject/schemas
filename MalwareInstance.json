{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
        "MalwareInstanceType": {
	    "title":"MalwareInstance",
            "type": "object",
            "description": "Captures all of the details pertaining to a single malware instance, including any corresponding Analyses, Field Data, Findings Bundles, and relationships to other Malware Instances.",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": ["malware-instance"]
                },
                "id": {
                    "type": "string",
                    "description": "Specifies a unique ID for this Malware Instance."
                },
                "instance_object_refs": {
                    "type": "array",
                    "items": {"type": "string"},
                    "description": "References the Cyber Observable Objects that represents the malware instance characterized by the Malware Instance. For most use cases, the Object referenced SHOULD be of type file. For cases where multiple Cyber Observable File Objects are referenced by this property, each Object MUST have the same hash value (via the hashes property) but MAY have different file names (via the name property). "
		        },
                "name": {
                    "$ref": "#/definitions/NameType",
                    "description": "Captures the name of the malware instance characterized by the Malware Instance. These names are assigned by the producer of the MAEC document, and may come from various sources, including from an analyst or as reported by a tool (e.g., an AV classification tool)."
                },
                "aliases": {
                    "type": "array",
                    "items": {"type": "#/definitions/NameType"},
                    "description": "Captures any aliases for the malware instance name associated with the Malware Instance, as reported by sources other than the producer of the MAEC document (e.g., AV vendors)."
                },
                "labels": {
                    "type": "array",
                    "items": {"type": "string"},
                    "description": "Specifies a single commonly accepted the label to describe the Malware Instance, e.g. \"worm\". The values for this property SHOULD come from the malware-label-ov vocabulary."
                },
                "description": {
                    "type": "string",
                    "description": "Captures a basic, textual description of the Malware Instance."
                },
                "field_data":{
                    "$ref": "MalwareInstance.json#/definitions/FieldDataType",
                    "description": "Specifies general metadata about the Malware Instance (e.g. first seen and last seen dates)."
                },
                "os_execution_envs": {
                    "type": "array",
                    "items": {"type": "string"},
                    "description": "Specifies the operating systems that the Malware Instance executes on. The values for this property SHOULD come from the operating-system-ov vocabulary."
                },
                "architecture_execution_envs": {
                    "type": "array",
                    "items":{"type": "string"},
                    "description": "Specifies the processor architecture(s) that the Malware Instance executes on. The values for this property SHOULD come from the processor-architecture-ov vocabulary."
                },
                "capabilities":{
                    "type":"array",
                    "items":{"$ref":"Capability.json#/definitions/CapabilityType"},
                    "description": "Specifies a set of one or more Capabilities possessed by the Malware Instance."
                },
                "os_features":{
                    "type":"array",
                    "items":{"type": "string"},
                    "description":"Specifies any operating system-specific features used by the malware instance. Each item in the list specifies a single feature. The values for this property SHOULD come from the os-features-android-ov, os-features-ios-ov, os-features-linux-ov, os-features-macosx-ov or os-features-windows-ov vocabularies"
                },
                "dynamic_features":{
                    "$ref": "#/definitions/DynamicFeaturesType",
                    "description": "Captures features associated with the semantics of the code executed by the Malware Instance. Note that DynamicFeaturesType captures multiple features."
                },
                "static_features":{
                    "items": {"$ref": "#/definitions/StaticFeatureType"},
                    "description": "Captures features associated with the binary that arent related to the semantics of the code (e.g. strings, packer information). Note that StaticFeaturesType captures multiple static features."
                },
                "analysis_metadata": {
                    "type": "array",
                    "items": {"$ref": "AnalysisMetadata.json#/definitions/AnalysisMetadataType"},
                    "description": "Captures metadata associated with the analyses performed on the Malware Instance (e.g., the tools that were used)."
                },
                "triggered_signatures": {
                    "type": "array",
                    "items": {"$ref": "#/definitions/SignatureMetadataType"},
                    "description": "Captures metadata associated with any signatures or rule (e.g. YARA) that were triggered during the analysis of the malware instance."
                }
            },
            "required": [
                "type",
                "id",
                "instance_object_refs"
            ]
        },
        "StaticFeatureType":{
            "title":"StaticFeature",
            "type":"object",
            "description":"Captures features associated with a malware binary not related to the semantics of the code.",
            "properties":{
                "strings":{
                    "type":"array",
                    "items":{"type":"string"},
                    "description":"Captures strings extracted from the binary."
                },
                "obfuscation_methods": {
                    "type": "array",
                    "items": {"type": "#/definitions/BinaryObfuscationType"},
                    "description": "Specifies the method(s) used to obfuscate the binary, such as packers or encryption."
                },
                "certificates":{
                    "type":"array",
                    "items":{"type":"string"},
                    "description":"References any software certificates used to sign the malware binary associated witht the malware instance. The Cyber Observable Objects referenced in this field MUST be for the type x509-certificate"
                },
                "file_headers":{
                    "type":"array",
                    "items":{"type":"string"},
                    "description":"References any file headers (e.g. PE file headers) extracted from the binary. The cyber Observable Objects referenced in this field MUST be of the type file."
                },
                "configuration_parameters":{
                    "type": "array",
                    "items": {"$ref":"#/definitions/MalwareConfigurationParameterType"},
                    "description":"Captures details of the configuration specified for the Malware Instance, such as the configuration parameters."
                },
                "development_environment":{
                    "$ref":"#/definitions/MalwareDevelopmentEnvironmentType",
                    "description":"Captures the details of the development environment used in the creation of the malware instance object characterized by the Malware Instance"
                }
            }
        },
        "MalwareConfigurationParameterType":{
            "title": "MalwareConfigurationParameter",
            "type": "object",
            "description": "Captures a single configuration parameter that may be defined for a malware instance, as a name/value pair.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the malware configuration parameter. The values for this property SHOULD come from the malware-configuration-parameter-ov vocabulary, which is based on the data reported by the Malware Configuration Parser (MWCP) tool developed by DC3. Parameters not included in the vocabulary may also be specified, in which it is reccommended to use the exact name of the parameter."
                },
                "value": {
                    "type": "string",
                    "description": "Captures the value of the malware configuration parameter."
                }
            },
            "required":["name"]
        },
        "MalwareDevelopmentEnvironmentType": {
        "title":"MalwareDevelopmentEnvironment",
            "type": "object",
            "description": "Captures details of the development environment used in developing the malware instance, such as information on any tools that were used.",
            "properties": {
                "tool_refs": {
                    "type": "array",
                    "items": {"type": "string"},
                    "description": "Captures a set of references to one or more tools used in the development of the malware instance. Values MUST reference a Software Object in the objects field at the top-level of the Package."
                },
                "debugging_file_refs": {
                    "type": "array",
                    "items": {"type": "string"},
                    "description": "Captures the properties of a debugging file associated with the malware instance, such as a PDB file. Values MUST reference a File Object, which will use the FileObjectType from the imported File Object Schema. More than one debugging_file field can be specified by using multiple instances of this field."
                }
            }
        },
        "NameType": {
            "title":"Name",
            "type": "object",
            "description": "Captures the name of a malware instance or malware family and the relative confidence of the name.",
            "properties": {
                "value": {
                    "type": "string",
                    "description": "Specifies the name of the malware instance or malware family."
                },
                "source":{
                    "$ref":"#/definitions/SourceType",
                    "description":"Specifies the source of the value property (name)."
                },
                "confidence": {
                    "type": "string",
                    "description": "Specifies the relative confidence in the accuracy of the assigned name. The values for this property is confidence-measure-ov."
                }
            },
            "required": ["value"]
        },
        "SourceType":{
            "title": "Source",
            "type": "object",
            "description": "Provides a way of characterizing the external source of a relevant MAEC entity, such as an Analysis. At least once \"name\" or \"organization\" MUST be included when using this type.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Refers to the name of the person associated with the source, such as the author of a report."
                },
                "references":{
                    "type": "string",
                    "format": "uri",
                    "description": "Provides an abstract way of specifying one or more external references for the source."
                },
                "organization":{
                    "type": "string",
                    "description": "Specifies the name of the organization from which the source originated."
                }
            }

        },
        "FieldDataType":{
            "title": "FieldData",
            "type": "object",
            "description": "Captures field data with a malware instance or family. At least one of \"delivery_vectors\" or \"first_seen\" or \"last_seen\" MUST be included when using this type.",
            "properties": {
                "delivery_vectors": {
                    "type": "array",
                    "items": {"type": "string"},
                    "description": "Specifies the vectors used to distribute/deploy the Malware Instance. The values for this property SHOULD come from the delivery-vector-ov vocabulary."
                },
                "first_seen": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Specifies the date/time that the malware instance was first seen by the producer of the Malware Instance Object."
                },
                "last_seen": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Specifies the date/time that the malware instance was last seen by producer of the Malware Instance Object."
                }
            }
        },
        "DynamicFeaturesType": {
            "title": "DyanmicFeatures",
            "type": "object",
            "description": "Captures the dynamic features, i.e., those that are associated with the semantics of the executed code, of a malware instance. At least one of the \"behavior_refs\" or \"action_refs\" or \"process_trees\" MUST be inlcuded when using this type.",
            "properties": {
                "behavior_refs": {
                    "type": "array",
                    "items": {"type": "string"},
                    "description": "Specifies a set of one or more Behaviors exhibited by the Malware Instance. Each item specifies the unique ID of the Behavior being referenced."
                },
                "action_refs": {
                    "type": "array",
                    "items": {"type": "string"},
                    "description": "Specifies a set of one or more Actions discovered for the Malware Instance. Each item specifies the unique ID of the Action being referenced."
                },
                "process_tree":{
                    "type": "array",
                    "items": {"type": "ProcessTree.json#/definitions/ProcessTreeNodeType"},
                    "description": "Specifies the Process Tree observed during the execution of the Malware Instance."
                }
            }
        },
        "SignatureMetadataType": {
            "title": "SignatureMetadata",
            "type": "object",
            "description": "Captures metadata associated with a signature (for example, a YARA rule) that may have been triggered during the analysis of a Malware Instance.",
            "properties": {
                "signature_type": {
                    "type": "string",
                    "description": "Specifies the type of the signature, i.e., the language or platform it is written for. For example, “snort”, for the Snort network intrusion detection system (NIDS). The values for this property SHOULD come from the signature-type-ov vocabulary."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name provided for the signature (if applicable)."
                },
                "description": {
                    "type": "string",
                    "description": "Specifies a textual description of the signature."
                },
                "author": {
                    "type": "string",
                    "description": "Specifies the name of the author of the signature."
                },
                "reference": {
                    "type": "string",
                    "format": "uri",
                    "description": "Specifies an external reference associated with the signature."
                },
                "severity": {
                    "type": "string",
                    "description": "Specifies a measure of severity associated with the detection of the signature."
                },
                "external_id": {
                    "type": "string",
                    "description": "Specifies an external identifier associated with the signature."
                }
            },
            "required":["signature_type"]
        },
        "BinaryObfuscationType": {
            "title": "BinaryObfuscation",
            "type": "object",
            "description": "Extension that captures metadata ont he methods that a binary may be obfuscated with, such as executable packers or XOR encryption. This includes obfuscation of the entire binary as well as its constituent pieces, such as strings.",
            "properties": {
                "method": {
                    "type": "string",
                    "description": "Specifies the method used in obfuscating the binary. The value for this property SHOULD come from the obfuscation-method-ov vocabulary."
                },
                "layer_order": {
                    "type": "integer",
                    "description": "Specifies the ordering of the obfuscation method with respect to other obfuscation methods (if known), as a positive integer. For example, if a binary was packed and then XOR encrypted, the packing layer would have an ordering of \"1\" and the XOR encryption layer would have an ordering of \"2\"."
                },
                "encryption_algorithm": {
                    "type": "string",
                    "description": "Specifies the name of the encryption algorithm used in the obfuscation method (if applicable). The values for this property SHOULD come from the STIX encryption-algo-ov vocabulary."
                },
                "packer_name": {
                    "type": "string",
                    "description": "Specifies the name of the packer (if applicable)."
                },
                "packer_version": {
                    "type": "string",
                    "description": "Specifies the version of the packer (id applicable)."
                },
                "packer_entry_point": {
                    "type": "string",
                    "description": "Specifies the entry point address of the packer (if applicable)."
                },
                "packer_signature": {
                    "type": "string",
                    "description": "Specifies the matching signature detected for the packer (if applicable)."
                }
            },
            "required": ["method"]
        }
    }
}
